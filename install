#! /usr/bin/env python3

from __future__ import print_function
from builtins import str
import os
import subprocess

HOME_DIR = os.getenv('HOME')
DOTFILES_DIR = os.getenv('DOTFILES_DIR')

# 1. INSTALL OH-MY-ZSH

subprocess.call(
    ['curl', '-fsSLo', 'oh-my-zsh-install.sh',
     'https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh']
)
subprocess.call(
    ['sh', 'oh-my-zsh-install.sh']
)
os.remove('oh-my-zsh-install.sh')

# 2. INSTALL BREW AND PIP PACKAGES
# TODO: make this optional using one of click, invoke, fabric, etc.

subprocess.call('cat brew_packages.txt | xargs brew install', shell=True)
subprocess.call('pip install -r pip_packages.txt', shell=True)

# 3. INSTALL VIM-PLUG AND PLUGINS

subprocess.call(
    ['curl', '-fLo', '{}/.vim/autoload/plug.vim'.format(HOME_DIR),
     '--create-dirs',
     'https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim']
)
subprocess.call(
    ['vim', '+PlugInstall', '+qall']
)

# 4. CREATE SYMLINKS


def dest_fn(rel_fn):
    return os.path.join(HOME_DIR, '.' + rel_fn)


def src_fn(rel_fn):
    return os.path.join(DOTFILES_DIR, rel_fn)


DOTFILES = [
    'zshrc',
    'slate',
    'vim',
    'tmux.conf',
    'gitconfig',
    'pypirc',
    'git_template',
    'gitignore_global',
]

for dotf in DOTFILES:
    try:
        src = src_fn(dotf)
        dest = dest_fn(dotf)
        print(src, '->', dest)
        os.symlink(src, dest)
        print('Symlink complete!')
    except OSError as e:
        print(str(e))
        pass
