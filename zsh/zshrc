 # zmodload zsh/zprof

# configuring PATH
export PATH=$BIN_DIR
export PATH=$PATH:/opt/homebrew/bin
export PATH=$PATH:/usr/local/opt/llvm/bin
export PATH=$PATH:/usr/local/bin:/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/sbin
export PATH=$PATH:$HOME/.local/bin
export PATH=$PATH:$HOME/.cargo/bin
export PATH=$PATH:$HOME/go/bin
export PATH=$PATH:/Applications/kitty.app/Contents/MacOS/

# fnm
eval "$(fnm env --use-on-cd --shell zsh)"

# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# set editor to nvim when present, else vim
command -v nvim > /dev/null && export EDITOR=nvim || export EDITOR=vim

# enable shift+tab for going back in auto complete menu
bindkey "^[[Z" reverse-menu-complete

# use emacs key-bindings in shell
bindkey -e

# allow comments on command line
setopt interactivecomments

# share history across sessions
export HISTFILE=$HOME/.zsh_history
export HISTSIZE=100000
export SAVEHIST=$HISTSIZE
setopt inc_append_history
setopt share_history

# easier cd'ing (can just use path/var)
setopt autocd
setopt cdablevars

# autocomplete configs
setopt no_auto_remove_slash  # autocomplete trailing slashes for directories

eval "$(/opt/homebrew/bin/brew shellenv)"

# makes compinit recognize files here
fpath+=~/.zfunc

# do compinit
autoload -Uz compinit

for dump in ~/.zcompdump(N.mh+24); do
    compinit
done

compinit -C

zstyle ':completion:*' menu yes select

# use C-x C-e (or C-x e) to open shell command in $EDITOR
autoload -U edit-command-line
zle -N edit-command-line
bindkey '^x^e' edit-command-line
bindkey '^xe' edit-command-line

# set word style so delimiters like `.` and `/` are recognized
autoload -U select-word-style
select-word-style bash

# configuring some environment variables
export DOTFILES_DIR=$HOME/dotfiles
export DATA_DIR=$DOTFILES_DIR/data
export BIN_DIR=$DOTFILES_DIR/bin

CACHE_DIR=$DATA_DIR/cache
mkdir -p $CACHE_DIR

alias ibrew='arch --x86_64 /usr/local/Homebrew/bin/brew'

# adds ~/.cargo/bin
source "$HOME/.cargo/env"

export MANPATH="/usr/local/man:$MANPATH"

# platform-specific configs
PLATFORM_ZSH_CONFIG="$DOTFILES_DIR/zsh/`uname`.zsh"
[[ -f $PLATFORM_ZSH_CONFIG ]] && source $PLATFORM_ZSH_CONFIG
unset PLATFORM_ZSH_CONFIG

# fzf config
[[ -f ~/.fzf.zsh ]] && source ~/.fzf.zsh
export FZF_DEFAULT_COMMAND="fd --type f --hidden -E .git"  # to find hidden files

# prevent Python from buffering stdout/stderr
export PYTHONUNBUFFERED=1

# you-should-use config
export YSU_MESSAGE_POSITION="after"
export YSU_MODE=ALL

# zsh autosuggestions config
export ZSH_AUTOSUGGEST_USE_ASYNC=true
export ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE="fg=103"

POETRY_COMPLETION_PATH=$CACHE_DIR/_poetry_completion_script
POETRY_COMPLETION_DEST=$HOME/.zfunc/_poetry
if  [[ ! -f $POETRY_COMPLETION_PATH ]] || [[ ! -a $POETRY_COMPLETION_DEST ]]; then
    [[ ! -f $POETRY_COMPLETION_PATH ]] && poetry completions zsh > $POETRY_COMPLETION_PATH
    mkdir -p $(dirname $POETRY_COMPLETION_DEST)
    rm -f $POETRY_COMPLETION_DEST
    ln -s $POETRY_COMPLETION_PATH $POETRY_COMPLETION_DEST
    unset POETRY_COMPLETION_PATH POETRY_COMPLETION_DEST
fi

# holds passwords and API tokens that shouldn't be in source control
touch $DOTFILES_DIR/zsh/secrets.zsh
source $DOTFILES_DIR/zsh/secrets.zsh

# powerlevel10k config
source $DOTFILES_DIR/zsh/p10k.zsh

# source my aliases
source $DOTFILES_DIR/zsh/aliases.zsh
source $DOTFILES_DIR/zsh/kube_aliases.zsh

# load antibody plugins
ZSH_PLUGINS_FILE=$DOTFILES_DIR/zsh/zsh_plugins.txt
BUNDLED_ZSH_PLUGINS_FILE=$CACHE_DIR/bundled_zsh_plugins.zsh
if [[ ! -f $BUNDLED_ZSH_PLUGINS_FILE || $ZSH_PLUGINS_FILE -nt $BUNDLED_ZSH_PLUGINS_FILE ]]; then
    echo "Regenerating $BUNDLED_ZSH_PLUGINS_FILE..."
    antibody bundle < $ZSH_PLUGINS_FILE > $BUNDLED_ZSH_PLUGINS_FILE
fi
source $BUNDLED_ZSH_PLUGINS_FILE
unset ZSH_PLUGINS_FILE BUNDLED_ZSH_PLUGINS_FILE

export AWS_ACCESS_KEY_ID=$(aws configure get default.aws_access_key_id)
export AWS_SECRET_ACCESS_KEY=$(aws configure get default.aws_secret_access_key)

zstyle ':completion:*' menu select

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
P10K_CONFIG=$DOTFILES_DIR/zsh/p10k.zsh
[[ ! -f $P10K_CONFIG ]] || source $P10K_CONFIG

eval "$(direnv hook zsh)"

# zprof

# Added by Windsurf
export PATH="/Users/matthew.goldberg/.codeium/windsurf/bin:$PATH"
