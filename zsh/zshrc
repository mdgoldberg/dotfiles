# set editor to nvim when present, else vim
command -v nvim > /dev/null && export EDITOR=nvim || export EDITOR=vim

# enable shift+tab for going back in auto complete menu
bindkey '^[[Z' reverse-menu-complete
#
# use emacs key-bindings in shell
bindkey -e

# disable vim's r command so it doesn't interfere with R lang
disable r

# automatically ls after cd
function chpwd() {
    emulate -L zsh
    ls
}

# configuring some environment variables
export DOTFILES_DIR=$HOME/dotfiles
export DATA_DIR=$DOTFILES_DIR/data
export BIN_DIR=$DOTFILES_DIR/bin

# configuring PATH
export PATH=$BIN_DIR:/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin:/opt/X11/bin:/Library/TeX/texbin:$HOME/.ssi/bin

export MANPATH="/usr/local/man:$MANPATH"

# platform-specific configs
PLATFORM_ZSH_CONFIG="$DOTFILES_DIR/zsh/`uname`.zsh"
[[ -f $PLATFORM_ZSH_CONFIG ]] && source $PLATFORM_ZSH_CONFIG
unset PLATFORM_ZSH_CONFIG

# pyenv startup and config
export PYENV_ROOT=$HOME/.pyenv
PYENV_INIT_SCRIPT=$DATA_DIR/cache/_pyenv_init_script
[[ ! -f $PYENV_INIT_SCRIPT ]] && pyenv init - > $PYENV_INIT_SCRIPT
source $PYENV_INIT_SCRIPT
unset PYENV_INIT_SCRIPT

# fzf config
[[ -f ~/.fzf.zsh ]] && source ~/.fzf.zsh
export FZF_DEFAULT_COMMAND="rg --hidden -g '!.git' -l ''"  # to find hidden files

# prevent Python from generating bytecode
export PYTHONDONTWRITEBYTECODE=1

# prevent Python from buffering stdout/stderr
export PYTHONUNBUFFERED=1

# nvm config
export NVM_DIR="$HOME/.nvm"
source $DOTFILES_DIR/zsh/lazy_load_node.zsh

# you-should-use config
export YSU_MESSAGE_POSITION="after"
export YSU_MODE=ALL

# zsh autosuggestions config
export ZSH_AUTOSUGGEST_USE_ASYNC=true

# pipenv config
export PIPENV_VENV_IN_PROJECT=true

# pipenv auto-completion
PIPENV_COMPLETION_SCRIPT=$DATA_DIR/cache/_pipenv_completion_script
[[ ! -f $PIPENV_COMPLETION_SCRIPT ]] && pipenv --completion > $PIPENV_COMPLETION_SCRIPT
source $PIPENV_COMPLETION_SCRIPT
unset PIPENV_COMPLETION_SCRIPT

# holds passwords and API tokens that shouldn't be in source control
touch $DOTFILES_DIR/.secrets
source $DOTFILES_DIR/.secrets

# source my aliases
source $DOTFILES_DIR/zsh/aliases.zsh
source $DOTFILES_DIR/zsh/school.zsh

# load antibody plugins
BUNDLED_ZSH_PLUGINS_FILE=$DATA_DIR/cache/bundled_zsh_plugins.zsh
if [[ (! -f $BUNDLED_ZSH_PLUGINS_FILE) || -N $BUNDLED_ZSH_PLUGINS_FILE ]]; then
    antibody bundle < $DOTFILES_DIR/zsh/zsh_plugins.txt > $BUNDLED_ZSH_PLUGINS_FILE
fi
source $BUNDLED_ZSH_PLUGINS_FILE
unset BUNDLED_ZSH_PLUGINS_FILE
